package com.sugartown02.goldfingerconsole.domain

import com.fasterxml.jackson.annotation.JsonEnumDefaultValue
import com.fasterxml.jackson.annotation.JsonValue

enum class MarketCode(@JsonValue val id: String, val active: Boolean = false, val priority: Int = 999) {
    @JsonEnumDefaultValue UNKNOWN("UNKNOWN"),

    KRW_1INCH("KRW-1INCH"),
    KRW_AAVE("KRW-AAVE"),
    KRW_ADA("KRW-ADA"),
    KRW_AERGO("KRW-AERGO"),
    KRW_AHT("KRW-AHT"),
    KRW_ANKR("KRW-ANKR"),
    KRW_AQT("KRW-AQT"),
    KRW_ARDR("KRW-ARDR"),
    KRW_ARK("KRW-ARK"),
    KRW_ATOM("KRW-ATOM"),
    KRW_AXS("KRW-AXS"),
    KRW_BAT("KRW-BAT"),
    KRW_BCH("KRW-BCH"),
    KRW_BORA("KRW-BORA"),
    KRW_BSV("KRW-BSV"),
    KRW_BTC("KRW-BTC", true, 1),
    KRW_BTG("KRW-BTG"),
    KRW_BTT("KRW-BTT"),
    KRW_CBK("KRW-CBK"),
    KRW_CHZ("KRW-CHZ"),
    KRW_CRE("KRW-CRE"),
    KRW_CRO("KRW-CRO"),
    KRW_CVC("KRW-CVC"),
    KRW_DAWN("KRW-DAWN"),
    KRW_DKA("KRW-DKA"),
    KRW_DOGE("KRW-DOGE"),
    KRW_DOT("KRW-DOT"),
    KRW_ELF("KRW-ELF"),
    KRW_ENJ("KRW-ENJ"),
    KRW_EOS("KRW-EOS"),
    KRW_ETC("KRW-ETC", true),
    KRW_ETH("KRW-ETH", true, 2),
    KRW_FCT2("KRW-FCT2"),
    KRW_FLOW("KRW-FLOW"),
    KRW_GAS("KRW-GAS"),
    KRW_GLM("KRW-GLM"),
    KRW_GRS("KRW-GRS"),
    KRW_HBAR("KRW-HBAR"),
    KRW_HIVE("KRW-HIVE"),
    KRW_HUM("KRW-HUM"),
    KRW_HUNT("KRW-HUNT"),
    KRW_ICX("KRW-ICX"),
    KRW_IOST("KRW-IOST", true),
    KRW_IOTA("KRW-IOTA"),
    KRW_IQ("KRW-IQ"),
    KRW_JST("KRW-JST"),
    KRW_KAVA("KRW-KAVA"),
    KRW_KNC("KRW-KNC"),
    KRW_LINK("KRW-LINK"),
    KRW_LOOM("KRW-LOOM"),
    KRW_LSK("KRW-LSK"),
    KRW_LTC("KRW-LTC"),
    KRW_MANA("KRW-MANA"),
    KRW_MATIC("KRW-MATIC"),
    KRW_MBL("KRW-MBL"),
    KRW_MED("KRW-MED"),
    KRW_META("KRW-META"),
    KRW_MFT("KRW-MFT"),
    KRW_MLK("KRW-MLK"),
    KRW_MOC("KRW-MOC"),
    KRW_MTL("KRW-MTL"),
    KRW_MVL("KRW-MVL"),
    KRW_NEO("KRW-NEO"),
    KRW_NU("KRW-NU"),
    KRW_OMG("KRW-OMG"),
    KRW_ONG("KRW-ONG"),
    KRW_ONT("KRW-ONT"),
    KRW_ORBS("KRW-ORBS"),
    KRW_PLA("KRW-PLA"),
    KRW_POLY("KRW-POLY"),
    KRW_POWR("KRW-POWR"),
    KRW_PUNDIX("KRW-PUNDIX"),
    KRW_QKC("KRW-QKC"),
    KRW_QTUM("KRW-QTUM"),
    KRW_REP("KRW-REP"),
    KRW_RFR("KRW-RFR"),
    KRW_SAND("KRW-SAND"),
    KRW_SBD("KRW-SBD"),
    KRW_SC("KRW-SC"),
    KRW_SNT("KRW-SNT"),
    KRW_SOL("KRW-SOL"),
    KRW_SRM("KRW-SRM"),
    KRW_SSX("KRW-SSX"),
    KRW_STEEM("KRW-STEEM"),
    KRW_STMX("KRW-STMX"),
    KRW_STORJ("KRW-STORJ"),
    KRW_STPT("KRW-STPT"),
    KRW_STRAX("KRW-STRAX"),
    KRW_STRK("KRW-STRK"),
    KRW_STX("KRW-STX"),
    KRW_SXP("KRW-SXP"),
    KRW_TFUEL("KRW-TFUEL"),
    KRW_THETA("KRW-THETA"),
    KRW_TON("KRW-TON"),
    KRW_TRX("KRW-TRX", true),
    KRW_TT("KRW-TT"),
    KRW_UPP("KRW-UPP"),
    KRW_VET("KRW-VET"),
    KRW_WAVES("KRW-WAVES"),
    KRW_WAXP("KRW-WAXP"),
    KRW_XEC("KRW-XEC"),
    KRW_XEM("KRW-XEM"),
    KRW_XLM("KRW-XLM"),
    KRW_XRP("KRW-XRP", true, 3),
    KRW_XTZ("KRW-XTZ"),
    KRW_ZIL("KRW-ZIL"),
    KRW_ZRX("KRW-ZRX");

    companion object {
        private val markets = values().associateBy(MarketCode::id)
        fun from(code: String) = markets[code] ?: UNKNOWN
    }
}
